_target_: src.flows.flow.Flow

# The path used during the flow; only AffinePath is supported
path:
  _target_: src.flows.path.AffinePath 

  scheduler:
    _target_: src.flows.schedulers.OTScheduler  # or CosineScheduler

# The loss function used to train the model
loss_fn:
  _target_: src.flows.losses.MSEFlowMatchingLoss

# The configuration for the flow
cfg:
  _target_: src.flows.types.FlowConfig
  predicts: "x_1" # or "x_0", "score", "velocity", what the model predicts

solver_cfg: # configuration for torchdiffeq.odeint
            # see https://github.com/rtqichen/torchdiffeq
  method: "euler" # midpoint, euler, ...
  n_steps: 100

  # then, you can set the solver parameters, like rtol, atol, etc.


optimizer_cfg:
  _target_: torch.optim.Adam
  _partial_: true     # ‚Üê important!
  lr: 0.0003